
Our website is built using a documentation generator called Sphinx.
Sphinx turns plain text files that we've written into an html format (it can generate other formats too, like PDFs, but we use it for html generation).
Once those html files have been generated, we use the hosting platform readthedocs to turn them into an accessible website. Yay!

The root directory of our documentation is MCDC/docs/source. 
It contains the Sphinx configuration file ``conf.py``, the root document ``index.rst``, and several other .rst files.
Each rst file generates an html page; the main page of the website is generated by the root document.
The root directory also contains several subdirectories, each of which has its own ``index.rst`` file and several other rst files, all of which generate individual html pages. 
It may be useful to take a look at MCDC/docs/source/index.rst as one example of a Sphinx rst file. 


We write files for Sphinx using a plaintext markup language called reStructuredText (Markdown is another plaintext markup language that you may be familiar with).
This page will include basic information on reStructuredText that will get you through creating some documentation for yourself. 
For more info, go here.

"Explicit markup" is used in reStructuredText for constructs that need special handling, like footnotes, specially highlighted paragraphs, comments, etc.
A block of explicit markup text starts with ".. " and is terminated by the next paragraph at the same level of indentation.

Sphinx generates webpage elements using explicit markup blocks called directives. 
Directives can have arguments, options, and content. 
For example, the image directive takes one argument (the name of the image) and has many options, including the height and width of the image.
.. image:: picture.jpeg
   :hieght: 100px
   :width: 200px

An explicit markup block without a directive is taken as a comment that will not appear on the webpage.

Sphinx's main directive is the toctree directive, which generates a table of contents tree (toctree) with links to other generated webpages.
The content of the toctree directive is a list of document names, using their name relative to the current document, and excluding the .rst extension.
For example, the MCDC docs root directory contains index.rst, install.rst, and the subdirectory user/ which also contains an index.rst file. 
To reference those pages, 
.. toctree::
   install
   user/index

Sphinx will generate an html file for all rst files in the source directory and its subdirectories.
By default, source/index.rst generates the main page of the website, build/index.html; the rest of the generated pages and subpages are linked together using toctrees.
Every rst file must occur in some toctree directive, because otherwise the generated webpage is not reachable through standard navigation.



You now understand the basics of Sphinx generating html files from rst files and how to get those html files to appear as navigable webpages. 
